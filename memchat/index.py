import streamlit as st
import os
import json
import config as cf
import tradeinloader



# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
with open(os.path.join(cf.dir_path, 'data.json'), 'r') as f:
    data = json.load(f)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –∏–∑ –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è
models = list(data.keys())



# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
def analyze_data():

    result = ""
    

    
    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    model = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å", models) 
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–∞–º—è—Ç–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    memory_options = [item["memory"] for item in data[model]] 
    
    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –ø–∞–º—è—Ç—å –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    memory = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–º—è—Ç—å", memory_options) 
    
    # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏ –ø–∞–º—è—Ç–∏
    params = next(item for item in data[model] if item["memory"] == memory) 
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    ideal_price = int(params["ideal_price"]) 

    col1, col2 = st.columns(2)
    
    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –µ–º–∫–æ—Å—Ç—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ —Å –ø–æ–º–æ—â—å—é —Å–ª–∞–π–¥–µ—Ä–∞
    battery_capacity = col2.slider("–ï–º–∫–æ—Å—Ç—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞", 0, 100, value=99)
    

    # –ï—Å–ª–∏ –µ–º–∫–æ—Å—Ç—å –º–µ–Ω—å—à–µ 85, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–º–µ–Ω—ã –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞
    if battery_capacity < 85:
        ideal_price += int(params["battery_replacement"])
    # –ï—Å–ª–∏ –µ–º–∫–æ—Å—Ç—å –æ—Ç 85 –¥–æ 90, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–Ω–æ—Å–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞
    elif 85 <= battery_capacity < 90:
        ideal_price += int(params["battery_wear"])
        

    package = col2.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—é", ["–¢–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ + –∫–æ—Ä–æ–±–∫–∞", "–ü–æ–ª–Ω—ã–π"]) 
    
    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—é –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ —Ç–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∫–æ—Ä–æ–±–∫–∏ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤
    if package == "–¢–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ":
        ideal_price += int(params["device_only"])
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ + –∫–æ—Ä–æ–±–∫–∞, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤
    elif package == "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ + –∫–æ—Ä–æ–±–∫–∞":
        ideal_price += int(params["device_box"])


    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∑–∞–¥–Ω–µ–π –∫—Ä—ã—à–∫–∏ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    back_cover = col2.toggle(" –¢—Ä–µ–±—É–µ—Ç—Å—è **–∑–∞–º–µ–Ω–∞ –∫—Ä—ã—à–∫–∏** (–æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —Ä–∞–∑–±–∏—Ç–æ, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã)")

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –Ω–µ—Ç, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–º–µ–Ω—ã –∑–∞–¥–Ω–µ–π –∫—Ä—ã—à–∫–∏
    if back_cover:
        ideal_price += int(params["back_cover_replacement"])
        result += (f"üè• –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ –∫—Ä—ã—à–∫–∏  \n")

    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    screen = col2.toggle("–¢—Ä–µ–±—É–µ—Ç—Å—è **–∑–∞–º–µ–Ω–∞ —ç–∫—Ä–∞–Ω–∞** (–æ—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, —Ä–∞–∑–±–∏—Ç, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã)")

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –Ω–µ—Ç, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–º–µ–Ω—ã —ç–∫—Ä–∞–Ω–∞
    if screen:
        ideal_price += int(params["screen_replacement"])
        result += (f"üè• –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ —ç–∫—Ä–∞–Ω–∞  \n")

    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –≤–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    
    condition = col2.select_slider("–í—ã–±–µ—Ä–∏—Ç–µ –≤–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", value="üòé –û—Ç–ª–∏—á–Ω–æ–µ",  options= ["üò¢ –ü–ª–æ—Ö–æ–µ", "üòê –°—Ä–µ–¥–Ω–µ–µ", "üòÄ –•–æ—Ä–æ—à–µ–µ", "üòé –û—Ç–ª–∏—á–Ω–æ–µ"])

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ —Å—Ä–µ–¥–Ω–µ–µ, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ç–µ—Ä—Ç–æ—Å—Ç–µ–π
    if condition == "üòê –°—Ä–µ–¥–Ω–µ–µ":
        # –ï—Å–ª–∏ –∏–¥–µ–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –º–µ–Ω—å—à–µ 20000, –ø—Ä–∏–±–∞–≤–ª—è–µ–º -2000
        if ideal_price < 20000:
            ideal_price -= 2000
        # –ò–Ω–∞—á–µ –ø—Ä–∏–±–∞–≤–ª—è–µ–º -1000
        else:
            ideal_price -= 1000
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –ø–ª–æ—Ö–æ–µ, –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π
    elif condition == "üò¢ –ü–ª–æ—Ö–æ–µ":
        # –ï—Å–ª–∏ –∏–¥–µ–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –º–µ–Ω—å—à–µ 20000, –ø—Ä–∏–±–∞–≤–ª—è–µ–º -3000
        if ideal_price < 20000:
            ideal_price -= 3000
        # –ò–Ω–∞—á–µ –ø—Ä–∏–±–∞–≤–ª—è–µ–º -2000
        else:
            ideal_price -= 2000

    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É
    
    result += (f"üì≤ {model} –Ω–∞ {memory}  \n")
    result += (f"üîã–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä {battery_capacity}%  \n")
    result += (f"üì¶ –ö–æ–º–ø–ª–µ–∫—Ç {package}  \n")
    if back_cover == False and screen == False: result += (f"‚úÖ –≠–∫—Ä–∞–Ω –∏ –∑–∞–¥–Ω—è—è –∫—Ä—ã—à–∫–∞ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∑–∞–º–µ–Ω—ã  \n")
    result += (f"{condition}  —Å–æ—Å—Ç–æ—è–Ω–∏–µ  \n")
    
    
    col1.write(result)
    col1.write(f"**üí∞–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –≤—ã–∫—É–ø–∞**: {ideal_price} —Ä—É–±–ª–µ–π")
    col1.write("üëâ ‚Äç‚Äç–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–æ–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—ã" —Å —Ç–µ–∫—Å—Ç–æ–º "–û–±–Ω–æ–≤–∏—Ç—å"
    update_button = st.button("‚ö†Ô∏è –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Ç–∞–±–ª–∏—Ü—ã")

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É, –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è kekjpeg
    if update_button:
        with st.spinner('–û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é'):
            tradeinloader.load()
