from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime, timedelta

WW_PLACES = {
    'Voronezh': '–í–æ—Ä–æ–Ω–µ–∂',
    'Kursk': '–ö—É—Ä—Å–∫',
    'Belgorod': '–ë–µ–ª–≥–æ—Ä–æ–¥',
    'Lipetsk': '–õ–∏–ø–µ—Ü–∫',
    'Tambov': '–¢–∞–º–±–æ–≤',
    'Orel': '–û—Ä–µ–ª',
    'Bryansk': '–ë—Ä—è–Ω—Å–∫',
    'Kursk': '–ö—É—Ä—Å–∫',
    'Vladimir': '–í–ª–∞–¥–∏–º–∏—Ä',
    'Tula': '–¢—É–ª–∞',
    'Ryazan': '–†—è–∑–∞–Ω—å',
}

def work_message(bot, client, message):
    # define the inline keyboard markup
    keyboard = InlineKeyboardMarkup()
    today_button = InlineKeyboardButton(text='–°–µ–≥–æ–¥–Ω—è', callback_data='today')
    tomorrow_button = InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞', callback_data='tomorrow')
    keyboard.row(today_button, tomorrow_button)

    # send the message with the inline keyboard markup
    bot.send_message(chat_id=message.chat.id, text='–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å:', reply_markup=keyboard)

# define the callback query handler function
def callback_query(bot, client, call):
    if call.data == 'today':
        day_offset = 0
        day_text = '–°–µ–≥–æ–¥–Ω—è'
    else:
        day_offset = 1
        day_text = '–ó–∞–≤—Ç—Ä–∞'
    
    # open the Google Sheets document by URL
    sheet = client.open_by_url('https://docs.google.com/spreadsheets/d/13KUmHtRXYbXjBE7KQ_4MFQ5VsgUYqu2heURY1y2NwiE/edit#gid=0')

    # select the worksheet by index (0-indexed)
    worksheet = sheet.get_worksheet(0)

    day = datetime.now().day + day_offset

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ 1 —Å—Ç–æ–ª–±—Ü–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –≥–æ—Ä–æ–¥–æ–≤ (–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–µ—á–µ–Ω—ã —Å–∏–º–≤–æ–ª–æ–º !) –∏ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ B-AF —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å—É (—Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞)
    values_a = [value.strip() for value in worksheet.col_values(1)[3:]]
    values_b = [value.strip() for value in worksheet.col_values(1 + day)[3:]]

    # get the current date and time
    now = datetime.now()

    # print the values from the 1st and 2nd columns
    a_values = []
    for a, b in zip(values_a, values_b):
        if a is not None:
            if a.startswith('!'):
                a_values.append(f"\nüè¢ –í –≥–æ—Ä–æ–¥–µ: {a[1:]}{b}\n")
            elif b is not None and b != '':
                a = WW_PLACES.get(a, a)
                b = WW_PLACES.get(b, b)
                a_values.append(f"üë§ {a}: {b}")

    # format the output
    if a_values:
        text = f"{day_text} ({(now + timedelta(days=day_offset)).strftime('%d.%m.%Y')}) —Ä–∞–±–æ—Ç–∞—é—Ç:\n" + '\n'.join(a_values)
    else:
        text = f"{day_text} ({(now + timedelta(days=day_offset)).strftime('%d.%m.%Y')}) –Ω–∏–∫—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

    # send the message
    bot.send_message(chat_id=call.message.chat.id, text=text)