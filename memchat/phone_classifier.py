import xml.etree.ElementTree as ET

def process_model_input(bot, message):
    model = message.text
    # –ß–∏—Ç–∞–µ–º XML —Ñ–∞–π–ª
    tree = ET.parse('phones.xml')
    root = tree.getroot()

    # –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ Model
    found_models = []
    for vendor in root.findall('Vendor'):
        vendor_name = vendor.get('name')
        for model_element in vendor.findall('Model'):
            model_name = model_element.get('name')
            if model.lower() in model_name.lower():
                memory_sizes = model_element.findall('MemorySize')
                colors = set()
                ram_sizes = set()

                # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–≤–µ—Ç–∞—Ö –∏ –û–ó–£
                for memory_size in memory_sizes:
                    for color in memory_size.findall('Color'):
                        colors.add(color.get('name'))
                    for ram_size in memory_size.findall('Color/RamSize'):
                        ram_sizes.add(ram_size.get('name'))

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
                result_message = f"üì± {vendor_name}\n"
                result_message += f"üì≤: {model_name}\n"
                result_message += f"üíæ: {', '.join(memory_size.get('name') for memory_size in memory_sizes)}\n"
                result_message += f"üíΩ: {', '.join(ram_sizes)}\n"
                result_message += "üñºÔ∏è " + ', '.join(colors) + "\n"

                found_models.append(result_message)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω—ã –ª–∏ –º–æ–¥–µ–ª–∏
    if found_models:
        for model_message in found_models:
            bot.send_message(message.chat.id, model_message)
    else:
        bot.send_message(message.chat.id, "–ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")